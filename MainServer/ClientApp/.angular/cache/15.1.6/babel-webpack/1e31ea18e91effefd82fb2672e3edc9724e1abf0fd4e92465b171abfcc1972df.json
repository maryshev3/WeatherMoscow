{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_3_tr_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"td\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"td\");\n    i0.ɵɵtext(24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const weather_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.temperature);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.humidity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.dewpoint);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.presure);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.winddirection);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.windspeed);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.cloudy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.highbordercloudy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.horizontalvisibility);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(weather_r3.weatherconditions);\n  }\n}\nfunction FetchDataComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"\\u0414\\u0430\\u0442\\u0430\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"\\u0412\\u0440\\u0435\\u043C\\u044F\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"\\u0422\\u0435\\u043C\\u043F.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"\\u0412\\u043B\\u0430\\u0436.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"\\u0422\\u043E\\u0447\\u043A\\u0430 \\u0440\\u043E\\u0441\\u044B\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"\\u0414\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"\\u041D\\u0430\\u043F\\u0440. \\u0432\\u0435\\u0442\\u0440\\u0430\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\");\n    i0.ɵɵtext(18, \"\\u0421\\u043A\\u043E\\u0440\\u043E\\u0441\\u0442\\u044C \\u0432\\u0435\\u0442\\u0440\\u0430\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"\\u041E\\u0431\\u043B\\u0430\\u0447\\u043D\\u043E\\u0441\\u0442\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"th\");\n    i0.ɵɵtext(22, \"\\u0412\\u0435\\u0440\\u0445\\u043D\\u044F\\u044F \\u0433\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043E\\u0431\\u043B\\u0430\\u0447\\u043D\\u043E\\u0441\\u0442\\u0438\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"th\");\n    i0.ɵɵtext(24, \"\\u0413\\u043E\\u0440\\u0438\\u0437\\u043E\\u043D\\u0442. \\u0432\\u0438\\u0434\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"th\");\n    i0.ɵɵtext(26, \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"tbody\");\n    i0.ɵɵtemplate(28, FetchDataComponent_table_3_tr_28_Template, 25, 12, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(28);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.weathers);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.weathers = [];\n    http.get('https://localhost:7145/WeatherForecast?PageNum=2').subscribe(result => {\n      this.weathers = result;\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"\\u0410\\u0440\\u0445\\u0438\\u0432 \\u043F\\u043E\\u0433\\u043E\\u0434\\u044B \\u0432 \\u041C\\u043E\\u0441\\u043A\\u0432\\u0435\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FetchDataComponent_p_2_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(3, FetchDataComponent_table_3_Template, 29, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.weathers);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.weathers);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAEAA,yBAAqB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAoBpCA,0BAAqC;IAC/BA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAkB;IAAAA,iBAAK;IAC3BA,0BAAI;IAAAA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,aAAsB;IAAAA,iBAAK;IAC/BA,2BAAI;IAAAA,aAAqB;IAAAA,iBAAK;IAC9BA,2BAAI;IAAAA,aAA2B;IAAAA,iBAAK;IACpCA,2BAAI;IAAAA,aAAuB;IAAAA,iBAAK;IAChCA,2BAAI;IAAAA,aAAoB;IAAAA,iBAAK;IAC7BA,2BAAI;IAAAA,aAA8B;IAAAA,iBAAK;IACvCA,2BAAI;IAAAA,aAAkC;IAAAA,iBAAK;IAC3CA,2BAAI;IAAAA,aAA+B;IAAAA,iBAAK;;;;IAXpCA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAkB;IAAlBA,qCAAkB;IAClBA,eAAyB;IAAzBA,4CAAyB;IACzBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAqB;IAArBA,wCAAqB;IACrBA,eAA2B;IAA3BA,8CAA2B;IAC3BA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAAoB;IAApBA,uCAAoB;IACpBA,eAA8B;IAA9BA,iDAA8B;IAC9BA,eAAkC;IAAlCA,qDAAkC;IAClCA,eAA+B;IAA/BA,kDAA+B;;;;;IA9BzCA,gCAAiF;IAGvEA,wCAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,8CAAK;IAAAA,iBAAK;IACdA,0BAAI;IAAAA,yCAAK;IAAAA,iBAAK;IACdA,0BAAI;IAAAA,0CAAK;IAAAA,iBAAK;IACdA,2BAAI;IAAAA,wEAAU;IAAAA,iBAAK;IACnBA,2BAAI;IAAAA,iEAAQ;IAAAA,iBAAK;IACjBA,2BAAI;IAAAA,yEAAW;IAAAA,iBAAK;IACpBA,2BAAI;IAAAA,gGAAc;IAAAA,iBAAK;IACvBA,2BAAI;IAAAA,6EAAU;IAAAA,iBAAK;IACnBA,2BAAI;IAAAA,mKAA0B;IAAAA,iBAAK;IACnCA,2BAAI;IAAAA,yHAAmB;IAAAA,iBAAK;IAC5BA,2BAAI;IAAAA,iEAAQ;IAAAA,iBAAK;IAGrBA,8BAAO;IACLA,6EAaK;IACPA,iBAAQ;;;;IAdkBA,gBAAW;IAAXA,yCAAW;;;ACfvC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,aAAQ,GAAc,EAAE;IAG7BD,IAAI,CAACE,GAAG,CAAY,kDAAkD,CAAC,CAACC,SAAS,CAACC,MAAM,IAAG;MACzF,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,kBAAkB;mBAAlBA,kBAAkB,4DAGS,UAAU;AAAA;AAHrCA,kBAAkB;QAAlBA,kBAAkB;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/Bf,6BAAoB;MAAAA,+HAAqB;MAAAA,iBAAK;MAE9CA,+DAA4C;MAE5CA,wEAiCQ;;;MAnCJA,eAAe;MAAfA,oCAAe;MAE8CA,eAAc;MAAdA,mCAAc","names":["i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","weathers","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\github\\WeatherMoscow\\MainServer\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","D:\\github\\WeatherMoscow\\MainServer\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Архив погоды в Москве</h1>\r\n\r\n<p *ngIf=\"!weathers\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"weathers\">\r\n  <thead>\r\n    <tr>\r\n      <th>Дата</th>\r\n      <th>Время</th>\r\n      <th>Темп.</th>\r\n      <th>Влаж.</th>\r\n      <th>Точка росы</th>\r\n      <th>Давление</th>\r\n      <th>Напр. ветра</th>\r\n      <th>Скорость ветра</th>\r\n      <th>Облачность</th>\r\n      <th>Верхняя граница облачности</th>\r\n      <th>Горизонт. видимость</th>\r\n      <th>Описание</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let weather of weathers\">\r\n      <td>{{ weather.date }}</td>\r\n      <td>{{ weather.time }}</td>\r\n      <td>{{ weather.temperature }}</td>\r\n      <td>{{ weather.humidity }}</td>\r\n      <td>{{ weather.dewpoint }}</td>\r\n      <td>{{ weather.presure }}</td>\r\n      <td>{{ weather.winddirection }}</td>\r\n      <td>{{ weather.windspeed }}</td>\r\n      <td>{{ weather.cloudy }}</td>\r\n      <td>{{ weather.highbordercloudy }}</td>\r\n      <td>{{ weather.horizontalvisibility }}</td>\r\n      <td>{{ weather.weatherconditions }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public weathers: Weather[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Weather[]>('https://localhost:7145/WeatherForecast?PageNum=2').subscribe(result => {\r\n      this.weathers = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Weather {\r\n  id: number;\r\n  date: string;\r\n  time: string;\r\n  temperature: number;\r\n  humidity: number;\r\n  DewPoint: number;\r\n  presure: number;\r\n  winddirection: string;\r\n  windspeed: number;\r\n  cloudy: number | null;\r\n  highbordercloudy: number;\r\n  horizontalvisibility: number | null;\r\n  weatherconditions: string | null;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}